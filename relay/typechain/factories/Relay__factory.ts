/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Relay } from "../Relay";

export class Relay__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Relay> {
    return super.deploy(overrides || {}) as Promise<Relay>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Relay {
    return super.attach(address) as Relay;
  }
  connect(signer: Signer): Relay__factory {
    return super.connect(signer) as Relay__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Relay {
    return new Contract(address, _abi, signerOrProvider) as Relay;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "get_blocks_for_chain_id",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "get_chain_at_position",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_max_chain_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "block_height",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "block_hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "chain_id",
        type: "uint256",
      },
    ],
    name: "store_block_header",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631053eb94146100515780631f830e0e146100a85780634eb8629c146100ea578063955cf12214610136575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610154565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6100e8600480360360608110156100be57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506101a7565b005b6101206004803603604081101561010057600080fd5b810190808035906020019092919080359060200190929190505050610289565b6040518082815260200191505060405180910390f35b61013e6102bf565b6040518082815260200191505060405180910390f35b600080600080600080600060016000898152602001908152602001600020548152602001908152602001600020905080600001548160010154826002015483600301549450945094509450509193509193565b60008060008381526020019081526020016000206001015414156102405760008060008381526020019081526020016000209050818160000181905550838160010181905550838160020181905550828160030181905550828160040160008681526020019081526020016000208190555081600281905550816001600060025481526020019081526020016000208190555050610284565b600080600083815260200190815260200160002090508381600201819055508281600301819055508281600401600086815260200190815260200160002081905550505b505050565b60008060008085815260200190815260200160002090508060040160008481526020019081526020016000205491505092915050565b600060025490509056fea2646970667358221220376a272f58ee244f04e504ad7026be207a852c176724642161f2e4db47a683b364736f6c63430007030033";
