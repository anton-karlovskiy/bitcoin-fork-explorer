/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface RelayInterface extends ethers.utils.Interface {
  functions: {
    "get_blocks_for_chain_id(uint256,uint256)": FunctionFragment;
    "get_chain_at_position(uint256)": FunctionFragment;
    "get_max_chain_id()": FunctionFragment;
    "store_block_header(uint256,bytes32,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "get_blocks_for_chain_id",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_chain_at_position",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_max_chain_id",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "store_block_header",
    values: [BigNumberish, BytesLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "get_blocks_for_chain_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_chain_at_position",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_max_chain_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "store_block_header",
    data: BytesLike
  ): Result;

  events: {};
}

export class Relay extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: RelayInterface;

  functions: {
    get_blocks_for_chain_id(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "get_blocks_for_chain_id(uint256,uint256)"(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    get_chain_at_position(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, string]>;

    "get_chain_at_position(uint256)"(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, string]>;

    get_max_chain_id(overrides?: CallOverrides): Promise<[BigNumber]>;

    "get_max_chain_id()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    store_block_header(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "store_block_header(uint256,bytes32,uint256)"(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  get_blocks_for_chain_id(
    id: BigNumberish,
    height: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "get_blocks_for_chain_id(uint256,uint256)"(
    id: BigNumberish,
    height: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  get_chain_at_position(
    position: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, string]>;

  "get_chain_at_position(uint256)"(
    position: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, string]>;

  get_max_chain_id(overrides?: CallOverrides): Promise<BigNumber>;

  "get_max_chain_id()"(overrides?: CallOverrides): Promise<BigNumber>;

  store_block_header(
    block_height: BigNumberish,
    block_hash: BytesLike,
    chain_id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "store_block_header(uint256,bytes32,uint256)"(
    block_height: BigNumberish,
    block_hash: BytesLike,
    chain_id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    get_blocks_for_chain_id(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "get_blocks_for_chain_id(uint256,uint256)"(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    get_chain_at_position(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, string]>;

    "get_chain_at_position(uint256)"(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, string]>;

    get_max_chain_id(overrides?: CallOverrides): Promise<BigNumber>;

    "get_max_chain_id()"(overrides?: CallOverrides): Promise<BigNumber>;

    store_block_header(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "store_block_header(uint256,bytes32,uint256)"(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    get_blocks_for_chain_id(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_blocks_for_chain_id(uint256,uint256)"(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_chain_at_position(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_chain_at_position(uint256)"(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_max_chain_id(overrides?: CallOverrides): Promise<BigNumber>;

    "get_max_chain_id()"(overrides?: CallOverrides): Promise<BigNumber>;

    store_block_header(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "store_block_header(uint256,bytes32,uint256)"(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    get_blocks_for_chain_id(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_blocks_for_chain_id(uint256,uint256)"(
      id: BigNumberish,
      height: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_chain_at_position(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_chain_at_position(uint256)"(
      position: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_max_chain_id(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "get_max_chain_id()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    store_block_header(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "store_block_header(uint256,bytes32,uint256)"(
      block_height: BigNumberish,
      block_hash: BytesLike,
      chain_id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
